cmake_minimum_required(VERSION 3.12...3.15)

set(ENLIVENGINE_ROOT_FILES 
	Config.hpp
	Engine.hpp
	Engine.cpp
)
source_group("" FILES ${ENLIVENGINE_ROOT_FILES})

file(GLOB_RECURSE ENLIVENGINE_PLATFORM_FILES "Platform/*")
source_group("Platform" FILES ${ENLIVENGINE_PLATFORM_FILES})

file(GLOB_RECURSE ENLIVENGINE_UTILS_FILES "Utils/*")
source_group("Utils" FILES ${ENLIVENGINE_UTILS_FILES})

file(GLOB_RECURSE ENLIVENGINE_MATH_FILES "Math/*")
source_group("Math" FILES ${ENLIVENGINE_MATH_FILES})

file(GLOB_RECURSE ENLIVENGINE_SDL_FILES "SDL/*")
source_group("SDL" FILES ${ENLIVENGINE_SDL_FILES})

file(GLOB_RECURSE ENLIVENGINE_WINDOW_FILES "Window/*")
source_group("Window" FILES ${ENLIVENGINE_WINDOW_FILES})

file(GLOB_RECURSE ENLIVENGINE_RESOURCES_FILES "Resources/*")
source_group("Resources" FILES ${ENLIVENGINE_RESOURCES_FILES})

file(GLOB_RECURSE ENLIVENGINE_AUDIO_FILES "Audio/*")
source_group("Audio" FILES ${ENLIVENGINE_AUDIO_FILES})

file(GLOB_RECURSE ENLIVENGINE_GRAPHICS_FILES "Graphics/*")
source_group("Graphics" FILES ${ENLIVENGINE_GRAPHICS_FILES})

file(GLOB_RECURSE ENLIVENGINE_ANIMATION_FILES "Animation/*")
source_group("Animation" FILES ${ENLIVENGINE_ANIMATION_FILES})

file(GLOB_RECURSE ENLIVENGINE_TILED_FILES "Tiled/*")
source_group("Tiled" FILES ${ENLIVENGINE_TILED_FILES})

file(GLOB_RECURSE ENLIVENGINE_CORE_FILES "Core/*")
source_group("Core" FILES ${ENLIVENGINE_CORE_FILES})

file(GLOB_RECURSE ENLIVENGINE_TOOLS_FILES "Tools/*")
source_group("Tools" FILES ${ENLIVENGINE_TOOLS_FILES})

add_library(Enlivengine STATIC
	${ENLIVENGINE_ROOT_FILES}
	${ENLIVENGINE_PLATFORM_FILES}
	${ENLIVENGINE_UTILS_FILES}
	${ENLIVENGINE_MATH_FILES}
	${ENLIVENGINE_SDL_FILES}
	${ENLIVENGINE_WINDOW_FILES}
	${ENLIVENGINE_RESOURCES_FILES}
	${ENLIVENGINE_AUDIO_FILES}
	${ENLIVENGINE_GRAPHICS_FILES}
	${ENLIVENGINE_ANIMATION_FILES}
	${ENLIVENGINE_TILED_FILES}
	${ENLIVENGINE_CORE_FILES}
	${ENLIVENGINE_TOOLS_FILES}
)
target_compile_definitions(Enlivengine PUBLIC $<$<CONFIG:RelWithDebInfo>:ENLIVE_DEBUG>)
if (MSVC)
	target_compile_options(Enlivengine PRIVATE /W4 /WX)
else()
	target_compile_options(Enlivengine PRIVATE -Wall -Wextra -pedantic -Werror)
endif()
target_include_directories(Enlivengine PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>)
target_link_libraries(Enlivengine PUBLIC EnlivengineThirdParty)
set_target_properties(Enlivengine PROPERTIES FOLDER "Enlivengine")
