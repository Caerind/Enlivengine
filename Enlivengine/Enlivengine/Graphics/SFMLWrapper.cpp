#include <Enlivengine/Graphics/SFMLWrapper.hpp>

namespace en
{

const char* sfKeyToString(sf::Keyboard::Key key)
{
#define KEYTOSTRING(keyValue) case sf::Keyboard::keyValue: return #keyValue; break;

	static_assert(static_cast<U32>(sf::Keyboard::KeyCount) == 101);

	switch (key)
	{
		KEYTOSTRING(Unknown);
		KEYTOSTRING(A);
		KEYTOSTRING(B);
		KEYTOSTRING(C);
		KEYTOSTRING(D);
		KEYTOSTRING(E);
		KEYTOSTRING(F);
		KEYTOSTRING(G);
		KEYTOSTRING(H);
		KEYTOSTRING(I);
		KEYTOSTRING(J);
		KEYTOSTRING(K);
		KEYTOSTRING(L);
		KEYTOSTRING(M);
		KEYTOSTRING(N);
		KEYTOSTRING(O);
		KEYTOSTRING(P);
		KEYTOSTRING(Q);
		KEYTOSTRING(R);
		KEYTOSTRING(S);
		KEYTOSTRING(T);
		KEYTOSTRING(U);
		KEYTOSTRING(V);
		KEYTOSTRING(W);
		KEYTOSTRING(X);
		KEYTOSTRING(Y);
		KEYTOSTRING(Z);
		KEYTOSTRING(Num0);
		KEYTOSTRING(Num1);
		KEYTOSTRING(Num2);
		KEYTOSTRING(Num3);
		KEYTOSTRING(Num4);
		KEYTOSTRING(Num5);
		KEYTOSTRING(Num6);
		KEYTOSTRING(Num7);
		KEYTOSTRING(Num8);
		KEYTOSTRING(Num9);
		KEYTOSTRING(Escape);
		KEYTOSTRING(LControl);
		KEYTOSTRING(LShift);
		KEYTOSTRING(LAlt);
		KEYTOSTRING(LSystem);
		KEYTOSTRING(RControl);
		KEYTOSTRING(RShift);
		KEYTOSTRING(RAlt);
		KEYTOSTRING(RSystem);
		KEYTOSTRING(Menu);
		KEYTOSTRING(LBracket);
		KEYTOSTRING(RBracket);
		KEYTOSTRING(Semicolon);
		KEYTOSTRING(Comma);
		KEYTOSTRING(Period);
		KEYTOSTRING(Quote);
		KEYTOSTRING(Slash);
		KEYTOSTRING(Backslash);
		KEYTOSTRING(Tilde);
		KEYTOSTRING(Equal);
		KEYTOSTRING(Hyphen);
		KEYTOSTRING(Space);
		KEYTOSTRING(Enter);
		KEYTOSTRING(Backspace);
		KEYTOSTRING(Tab);
		KEYTOSTRING(PageUp);
		KEYTOSTRING(PageDown);
		KEYTOSTRING(End);
		KEYTOSTRING(Home);
		KEYTOSTRING(Insert);
		KEYTOSTRING(Delete);
		KEYTOSTRING(Add);
		KEYTOSTRING(Subtract);
		KEYTOSTRING(Multiply);
		KEYTOSTRING(Divide);
		KEYTOSTRING(Left);
		KEYTOSTRING(Right);
		KEYTOSTRING(Up);
		KEYTOSTRING(Down);
		KEYTOSTRING(Numpad0);
		KEYTOSTRING(Numpad1);
		KEYTOSTRING(Numpad2);
		KEYTOSTRING(Numpad3);
		KEYTOSTRING(Numpad4);
		KEYTOSTRING(Numpad5);
		KEYTOSTRING(Numpad6);
		KEYTOSTRING(Numpad7);
		KEYTOSTRING(Numpad8);
		KEYTOSTRING(Numpad9);
		KEYTOSTRING(F1);
		KEYTOSTRING(F2);
		KEYTOSTRING(F3);
		KEYTOSTRING(F4);
		KEYTOSTRING(F5);
		KEYTOSTRING(F6);
		KEYTOSTRING(F7);
		KEYTOSTRING(F8);
		KEYTOSTRING(F9);
		KEYTOSTRING(F10);
		KEYTOSTRING(F11);
		KEYTOSTRING(F12);
		KEYTOSTRING(F13);
		KEYTOSTRING(F14);
		KEYTOSTRING(F15);
		KEYTOSTRING(Pause);
		default: return "Unknown"; break;
	}

#undef KEYTOSTRING
}

sf::Keyboard::Key stringToSfKey(const char* keyString)
{
#define STRINGTOKEY(keyValue) if (strcmp(keyString, #keyValue) == 0) { return sf::Keyboard::keyValue; }

	STRINGTOKEY(Unknown);
	STRINGTOKEY(A);
	STRINGTOKEY(B);
	STRINGTOKEY(C);
	STRINGTOKEY(D);
	STRINGTOKEY(E);
	STRINGTOKEY(F);
	STRINGTOKEY(G);
	STRINGTOKEY(H);
	STRINGTOKEY(I);
	STRINGTOKEY(J);
	STRINGTOKEY(K);
	STRINGTOKEY(L);
	STRINGTOKEY(M);
	STRINGTOKEY(N);
	STRINGTOKEY(O);
	STRINGTOKEY(P);
	STRINGTOKEY(Q);
	STRINGTOKEY(R);
	STRINGTOKEY(S);
	STRINGTOKEY(T);
	STRINGTOKEY(U);
	STRINGTOKEY(V);
	STRINGTOKEY(W);
	STRINGTOKEY(X);
	STRINGTOKEY(Y);
	STRINGTOKEY(Z);
	STRINGTOKEY(Num0);
	STRINGTOKEY(Num1);
	STRINGTOKEY(Num2);
	STRINGTOKEY(Num3);
	STRINGTOKEY(Num4);
	STRINGTOKEY(Num5);
	STRINGTOKEY(Num6);
	STRINGTOKEY(Num7);
	STRINGTOKEY(Num8);
	STRINGTOKEY(Num9);
	STRINGTOKEY(Escape);
	STRINGTOKEY(LControl);
	STRINGTOKEY(LShift);
	STRINGTOKEY(LAlt);
	STRINGTOKEY(LSystem);
	STRINGTOKEY(RControl);
	STRINGTOKEY(RShift);
	STRINGTOKEY(RAlt);
	STRINGTOKEY(RSystem);
	STRINGTOKEY(Menu);
	STRINGTOKEY(LBracket);
	STRINGTOKEY(RBracket);
	STRINGTOKEY(Semicolon);
	STRINGTOKEY(Comma);
	STRINGTOKEY(Period);
	STRINGTOKEY(Quote);
	STRINGTOKEY(Slash);
	STRINGTOKEY(Backslash);
	STRINGTOKEY(Tilde);
	STRINGTOKEY(Equal);
	STRINGTOKEY(Hyphen);
	STRINGTOKEY(Space);
	STRINGTOKEY(Enter);
	STRINGTOKEY(Backspace);
	STRINGTOKEY(Tab);
	STRINGTOKEY(PageUp);
	STRINGTOKEY(PageDown);
	STRINGTOKEY(End);
	STRINGTOKEY(Home);
	STRINGTOKEY(Insert);
	STRINGTOKEY(Delete);
	STRINGTOKEY(Add);
	STRINGTOKEY(Subtract);
	STRINGTOKEY(Multiply);
	STRINGTOKEY(Divide);
	STRINGTOKEY(Left);
	STRINGTOKEY(Right);
	STRINGTOKEY(Up);
	STRINGTOKEY(Down);
	STRINGTOKEY(Numpad0);
	STRINGTOKEY(Numpad1);
	STRINGTOKEY(Numpad2);
	STRINGTOKEY(Numpad3);
	STRINGTOKEY(Numpad4);
	STRINGTOKEY(Numpad5);
	STRINGTOKEY(Numpad6);
	STRINGTOKEY(Numpad7);
	STRINGTOKEY(Numpad8);
	STRINGTOKEY(Numpad9);
	STRINGTOKEY(F1);
	STRINGTOKEY(F2);
	STRINGTOKEY(F3);
	STRINGTOKEY(F4);
	STRINGTOKEY(F5);
	STRINGTOKEY(F6);
	STRINGTOKEY(F7);
	STRINGTOKEY(F8);
	STRINGTOKEY(F9);
	STRINGTOKEY(F10);
	STRINGTOKEY(F11);
	STRINGTOKEY(F12);
	STRINGTOKEY(F13);
	STRINGTOKEY(F14);
	STRINGTOKEY(F15);
	STRINGTOKEY(Pause);
	return sf::Keyboard::Unknown;

#undef STRINGTOKEY
}

} // namespace en
